# https://discuss.circleci.com/t/build-on-tag/9864/42
# NOTE: a workaround that make circle-ci 2.0 support $CIRCLE_TAG environment variable
deployment:
  fake_deploy_for_production:
    tag: /.*/
    commands:
      - echo "make tags run in 2.0"

version: 2
jobs:
  build:
    working_directory: ~/hello-world
    docker:
      - image: php:7.3.3
        cmd: ["/bin/bash"]
      - image: redis:3.0
      - image: mysql:5.7.18
        environment:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: testing_hello_world

    steps:
      - checkout

      - run:
          name: Install System Libs
          command: |
            apt -qq update
            apt install -y -qq git ruby-full zlib1g-dev libzip-dev
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            php composer-setup.php
            mv composer.phar /usr/local/bin/composer
            php -r "unlink('composer-setup.php');"
            docker-php-ext-install pdo_mysql zip
      - restore_cache:
          key: dependency-cache-rubygem-{{ checksum "Gemfile.lock" }}

      - restore_cache:
          key: dependency-cache-php-composer-{{ checksum "composer.lock" }}

      - run:
          name: Install Dependencies
          command: |
            cp .env.example .env
            composer install

      - save_cache:
          key: dependency-cache-php-composer-{{ checksum "composer.lock" }}
          paths:
            - ./vendor

      - run:
          name: Run Tests
          command: |
            composer test
            if [[ -d Modules ]]; then
              composer test:modules
            fi

      - deploy:
          command: |
            /usr/bin/gem install bundler -v 1.16.0
            bundle install
            echo "current branch is ${CIRCLE_BRANCH}"
            echo "current tag is ${CIRCLE_TAG}"
            if [[ -n "${CIRCLE_TAG}" ]]; then
              CI_BRANCH="${CIRCLE_TAG}" cap production deploy --dry-run
            elif [[ "${CIRCLE_BRANCH}" == "master" ]]; then
              CI_BRANCH=master cap staging deploy --dry-run
            elif [[ "${CIRCLE_BRANCH}" == "issue-464-bi" ]]; then
              CI_BRANCH=issue-464-bi cap staging deploy
            fi

      - save_cache:
          key: dependency-cache-rubygem-{{ checksum "Gemfile.lock" }}
          paths:
            - /var/lib/gems
            - /usr/local/bin/cap
            - /usr/local/bin/capify
